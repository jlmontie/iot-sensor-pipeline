# Cloud Workflows pipeline definition
main:
  steps:
    - init:
        assign:
          - project_id: ${sys.get_env("GOOGLE_CLOUD_PROJECT")}
          - dataset_id: "iot_pipeline"
          - table_id: "raw_sensor_readings"
    
    - log_start:
        call: sys.log
        args:
          text: "Starting IoT pipeline execution"
          severity: INFO
    
    - ingest_pubsub_data:
        call: http.post
        args:
          url: ${"https://us-central1-" + project_id + ".cloudfunctions.net/ingest-sensor-data"}
          headers:
            Content-Type: "application/json"
          body:
            dataset_id: ${dataset_id}
            table_id: ${table_id}
        result: ingest_result
    
    - log_ingest:
        call: sys.log
        args:
          text: ${"Ingested " + string(ingest_result.body.records_processed) + " records"}
          severity: INFO
    
    - run_dbt_models:
        call: http.post
        args:
          url: "https://cloud.getdbt.com/api/v2/accounts/ACCOUNT_ID/jobs/JOB_ID/run/"
          headers:
            Authorization: ${"Token " + sys.get_env("DBT_CLOUD_TOKEN")}
            Content-Type: "application/json"
          body:
            cause: "Triggered by Cloud Workflows"
        result: dbt_result
    
    - log_completion:
        call: sys.log
        args:
          text: "Pipeline completed successfully"
          severity: INFO
    
    - return_result:
        return:
          status: "success"
          records_ingested: ${ingest_result.body.records_processed}
          dbt_run_id: ${dbt_result.body.data.id}





