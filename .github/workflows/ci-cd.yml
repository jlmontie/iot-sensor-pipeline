name: CI/CD Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}
  GAR_LOCATION: us-central1
  REPOSITORY: iot-demo-dev-repo
  SERVICE_API: iot-demo-dev-api
  SERVICE_DASHBOARD: iot-demo-dev-dashboard

jobs:
  lint-and-test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [ "3.10", "3.11" ]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install flake8 black pytest
          pip install -r src/requirements.txt
          pip install -r cloud/functions/requirements.txt

      - name: Lint with flake8
        run: |
          flake8 src/ cloud/functions/ --count --select=E9,F63,F7,F82 --show-source --statistics
          flake8 src/ cloud/functions/ --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics

      - name: Format check with black
        run: black --check src/ cloud/functions/

      - name: Run tests
        run: pytest --maxfail=1 --disable-warnings -q

  deploy:
    runs-on: ubuntu-latest
    needs: lint-and-test
    if: github.ref == 'refs/heads/main'

    permissions:
      contents: read
      id-token: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY }}

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.5.0

      - name: Terraform Init
        run: terraform -chdir=terraform init

      - name: Terraform Plan
        run: |
          terraform -chdir=terraform plan -out=tfplan \
            -var="project_id=${{ secrets.GCP_PROJECT_ID }}" \
            -var="project_name=iot-pipeline" \
            -var="environment=prod"

      - name: Terraform Apply
        run: terraform -chdir=terraform apply -auto-approve tfplan